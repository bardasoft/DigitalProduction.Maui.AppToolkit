<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
	xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
	xmlns:dpcontrols="clr-namespace:DigitalProduction.Maui.Controls;assembly=DigitalProduction.Maui"
	xmlns:dg="clr-namespace:Maui.DataGrid;assembly=Maui.DataGrid"
	x:Class="DigitalProduction.Maui.Resources.Styles.Styles">

	<Style TargetType="ActivityIndicator">
		<Setter Property="Color" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource White}}"/>
	</Style>

	<Style TargetType="IndicatorView">
		<Setter Property="IndicatorColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray500}}"/>
		<Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Light={DynamicResource Gray950}, Dark={DynamicResource Gray100}}"/>
	</Style>

	<Style TargetType="Border">
		<Setter Property="Stroke" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray500}}"/>
		<Setter Property="StrokeShape" Value="Rectangle"/>
		<Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="Border.StrokeShape">
            <RoundRectangle CornerRadius="8"/>
        </Setter>
    </Style>

	<Style TargetType="BoxView">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Gray950}, Dark={DynamicResource Gray200}}"/>
	</Style>

	<Style TargetType="Button" ApplyToDerivedTypes="True" x:Key="ButtonBaseStyle">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource White}}"/>
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource PrimaryDark}}"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="BorderWidth" Value="0"/>
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="Padding" Value="4,4"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VerticalOptions" Value="Center"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray950}, Dark={DynamicResource Gray200}}"/>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Pressed">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue200Accent}, Dark={DynamicResource Blue200Accent}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="PointerOver">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue100Accent}, Dark={DynamicResource Blue100Accent}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	<!--
		Specify a blank style referencing the base to make the style the default for the TargetType.
		When you provide a "Key" the style no longer applies universally to a TargetType, only controls that specifically call for the style by the key.
	-->
	<Style TargetType="Button" ApplyToDerivedTypes="True" BasedOn="{StaticResource ButtonBaseStyle}"/>

	<Style TargetType="ImageButton" ApplyToDerivedTypes="True" x:Key="ImageButtonBaseStyle">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource PrimaryDark}}"/>
		<Setter Property="BorderWidth" Value="0"/>
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="32"/>
		<Setter Property="VerticalOptions" Value="Center"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Pressed">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue200Accent}, Dark={DynamicResource Blue200Accent}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="PointerOver">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue100Accent}, Dark={DynamicResource Blue100Accent}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	<Style TargetType="ImageButton" ApplyToDerivedTypes="True" BasedOn="{StaticResource ImageButtonBaseStyle}"/>

	<Style TargetType="CheckBox">
		<Setter Property="Color" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource White}}"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Color" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="DatePicker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource White}}"/>
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray500}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Editor">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Black}, Dark={DynamicResource White}}"/>
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray500}}"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Entry">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Black}, Dark={DynamicResource White}}"/>
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource UserEntryControlLight}, Dark={DynamicResource UserEntryControlDark}}"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray500}}"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Label" ApplyToDerivedTypes="True" x:Key="LabelBaseStyle">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Black}, Dark={DynamicResource White}}"/>
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	<Style TargetType="Label" ApplyToDerivedTypes="True" BasedOn="{StaticResource LabelBaseStyle}"/>

	<Style TargetType="Span">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Black}, Dark={DynamicResource White}}"/>
	</Style>

	<Style TargetType="Label" x:Key="Headline">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource MidnightBlue}, Dark={DynamicResource White}}"/>
		<Setter Property="FontSize" Value="32"/>
		<Setter Property="HorizontalOptions" Value="Center"/>
		<Setter Property="HorizontalTextAlignment" Value="Center"/>
	</Style>

	<Style TargetType="Label" x:Key="SubHeadline">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource MidnightBlue}, Dark={DynamicResource White}}"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="HorizontalOptions" Value="Center"/>
		<Setter Property="HorizontalTextAlignment" Value="Center"/>
	</Style>

	<Style TargetType="ListView">
		<Setter Property="SeparatorColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray500}}"/>
		<Setter Property="RefreshControlColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource Gray200}}"/>
	</Style>

	<Style TargetType="Picker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource White}}"/>
        <Setter Property="TitleColor" Value="{AppThemeBinding Light={DynamicResource ControlLabelLight}, Dark={DynamicResource ControlLabelDark}}"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource UserEntryControlLight}, Dark={DynamicResource UserEntryControlDark}}"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
							<Setter Property="TitleColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="ProgressBar">
		<Setter Property="ProgressColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource White}}"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="ProgressColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="RadioButton">
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Black}, Dark={DynamicResource White}}"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="44"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="RefreshView">
		<Setter Property="RefreshColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource Gray200}}"/>
	</Style>

	<Style TargetType="SearchBar">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource White}}"/>
		<Setter Property="PlaceholderColor" Value="{DynamicResource Gray500}"/>
		<Setter Property="CancelButtonColor" Value="{DynamicResource Gray500}"/>
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
							<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="SearchHandler">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource White}}"/>
		<Setter Property="PlaceholderColor" Value="{DynamicResource Gray500}"/>
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
							<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Shadow">
		<Setter Property="Radius" Value="15"/>
		<Setter Property="Opacity" Value="0.5"/>
		<Setter Property="Brush" Value="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource White}}"/>
		<Setter Property="Offset" Value="10,10"/>
	</Style>

	<Style TargetType="Slider">
		<Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource PrimaryDark}}"/>
		<Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray600}}"/>
		<Setter Property="ThumbColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource PrimaryDark}}"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
							<Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="SwipeItem">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource Black}}"/>
	</Style>

	<Style TargetType="Switch">
		<Setter Property="WidthRequest" Value="40"/>
		<Setter Property="MinimumWidthRequest" Value="40"/>
		<Setter Property="OnColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource White}}"/>
		<Setter Property="ThumbColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource PrimaryDark}}"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="OnColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="On">
						<VisualState.Setters>
							<Setter Property="OnColor" Value="{AppThemeBinding Light={DynamicResource Secondary}, Dark={DynamicResource Gray200}}"/>
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource PrimaryDark}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Off">
						<VisualState.Setters>
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={DynamicResource Primary}, Dark={DynamicResource PrimaryDark}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="TimePicker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource White}}"/>
		<Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="MinimumHeightRequest" Value="32"/>
		<Setter Property="MinimumWidthRequest" Value="44"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Page" ApplyToDerivedTypes="True">
		<Setter Property="Padding" Value="0"/>
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource OffBlack}}"/>
	</Style>

	<Style TargetType="Shell" ApplyToDerivedTypes="True">
		<Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Gray100}, Dark={DynamicResource OffBlack}}"/>
		<Setter Property="Shell.ForegroundColor" Value="{OnPlatform WinUI={DynamicResource White}, Default={DynamicResource White}}"/>
		<Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={DynamicResource DarkGray}, Dark={DynamicResource White}}"/>
		<Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray950}}"/>
		<Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray200}}"/>
		<Setter Property="Shell.NavBarHasShadow" Value="False"/>
		<Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource Black}}"/>
		<Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={DynamicResource Magenta}, Dark={DynamicResource White}}"/>
		<Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={DynamicResource Magenta}, Dark={DynamicResource White}}"/>
		<Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={DynamicResource Gray900}, Dark={DynamicResource Gray200}}"/>
	</Style>

	<Style TargetType="NavigationPage">
		<Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource OffBlack}}"/>
		<Setter Property="BarTextColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource White}}"/>
		<Setter Property="IconColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource White}}"/>
	</Style>

	<Style TargetType="TabbedPage">
		<Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource Gray950}}"/>
		<Setter Property="BarTextColor" Value="{AppThemeBinding Light={DynamicResource Magenta}, Dark={DynamicResource White}}"/>
		<Setter Property="UnselectedTabColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray950}}"/>
		<Setter Property="SelectedTabColor" Value="{AppThemeBinding Light={DynamicResource Gray950}, Dark={DynamicResource Gray200}}"/>
	</Style>

	<!-- Popups -->
	<Style TargetType="toolkit:Popup" ApplyToDerivedTypes="True">
		<Setter Property="Color" Value="Transparent"/>
	</Style>
	<Style TargetType="Border" Class="PopupFrameStyle">
		<Setter Property="Background" Value="{AppThemeBinding Light={DynamicResource LightGray}, Dark={DynamicResource Gray900}}"/>
		<Setter Property="Padding" Value="20"/>
		<Setter Property="Border.StrokeShape">
			<RoundRectangle CornerRadius="20"/>
		</Setter>
	</Style>

	<!-- Layouts -->
	<!--
		It seems you cannot have a style that has a "Key" and a "Class".  To get around this, create a base with a key,
		then wrap it with a class using another style.
	-->
	<Style TargetType="VerticalStackLayout" x:Key="VerticalLayoutKey">
		<Setter Property="Spacing" Value="10"/>
		<Setter Property="Padding" Value="0"/>
	</Style>
	<Style TargetType="VerticalStackLayout" BasedOn="{StaticResource VerticalLayoutKey}" Class="VerticalLayoutStyle"/>

	<Style TargetType="HorizontalStackLayout" x:Key="ButtonRowStyleBase">
		<Setter Property="Spacing" Value="20"/>
		<Setter Property="Padding" Value="0"/>
	</Style>
	<Style TargetType="HorizontalStackLayout" BasedOn="{StaticResource ButtonRowStyleBase}" Class="TopButtonRowStyle"/>
	<Style TargetType="HorizontalStackLayout"  BasedOn="{StaticResource ButtonRowStyleBase}" Class="BottomButtonRowStyle">
		<Setter Property="Margin" Value="0,8,0,0"/>
		<Setter Property="VerticalOptions" Value="End"/>
		<Setter Property="HorizontalOptions" Value="End"/>
	</Style>

	<Style TargetType="Grid" x:Key="BrowsingStyleBase">
		<Setter Property="RowSpacing" Value="0"/>
		<Setter Property="ColumnDefinitions" Value="*,100"/>
		<Setter Property="ColumnSpacing" Value="8"/>
	</Style>
	<Style TargetType="Grid" BasedOn="{StaticResource BrowsingStyleBase}" Class="FileBrowsingGridStyle">
		<Setter Property="RowDefinitions" Value="27,34,16"/>
	</Style>

	<Style TargetType="VerticalStackLayout" Class="TitleVerticalStackStyle">
		<Setter Property="Spacing" Value="6"/>
	</Style>

	<!-- Label types -->
	<Style TargetType="Label" ApplyToDerivedTypes="True"  x:Key="LabelSectionTitle">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray950}, Dark={DynamicResource Gray100}}"/>
		<Setter Property="FontSize" Value="18"/>
	</Style>

	<Style TargetType="Label" Class="Title">
		<Setter Property="FontSize" Value="22"/>
		<Setter Property="FontFamily" Value="OpenSans-Semibold"/>
		<Setter Property="FontAttributes" Value="Bold"/>
		<Setter Property="HorizontalOptions" Value="Center"/>
	</Style>

	<Style TargetType="Label" x:Key="SmallLabelBase" ApplyToDerivedTypes="True"  BasedOn="{StaticResource LabelBaseStyle}">
		<Setter Property="VerticalTextAlignment" Value="Start"/>
		<Setter Property="HorizontalTextAlignment" Value="Start"/>
		<Setter Property="HorizontalOptions" Value="Start"/>
		<Setter Property="VerticalOptions" Value="Start"/>
	</Style>

	<Style TargetType="Label" Class="ControlLabel" BasedOn="{StaticResource SmallLabelBase}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource ControlLabelLight}, Dark={DynamicResource ControlLabelDark}}"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
		<Setter Property="FontSize" Value="14"/>
	</Style>
	<Style TargetType="Label" Class="InvalidLabelStyle" BasedOn="{StaticResource SmallLabelBase}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource ErrorColorLight}, Dark={DynamicResource ErrorColorDark}}"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style TargetType="Label" Class="ValidLabelStyle" BasedOn="{StaticResource SmallLabelBase}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource ValidColorLight}, Dark={DynamicResource ValidColorDark}}"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource Gray300}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<!-- Button Sizes -->
	<Style TargetType="Button" Class="StandardSizeButtonStyle">
		<Setter Property="HeightRequest" Value="32"/>
		<Setter Property="WidthRequest" Value="100"/>
	</Style>

	<Style TargetType="Button" Class="WideButtonStyle">
		<Setter Property="HeightRequest" Value="32"/>
		<Setter Property="WidthRequest" Value="140"/>
	</Style>

	<Style TargetType="Button" Class="StandardHeightButtonStyle">
		<Setter Property="HeightRequest" Value="32"/>
	</Style>
	<Style TargetType="Button" Class="StandardWidthButtonStyle">
		<Setter Property="WidthRequest" Value="100"/>
	</Style>

	<!-- Hyperlink -->
	<Style TargetType="{x:Type dpcontrols:HyperlinkLabel}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={DynamicResource HyperLinkLight}, Dark={DynamicResource HyperLinkDark}}"/>
	</Style>

	<!-- Stepper -->

	<Style TargetType="dpcontrols:StepperButton" ApplyToDerivedTypes="True" BasedOn="{StaticResource ImageButtonBaseStyle}" x:Key="StepperButtonBaseStyle">
		<Setter Property="WidthRequest" Value="22"/>
		<Setter Property="HeightRequest" Value="22"/>
		<Setter Property="MinimumWidthRequest" Value="10"/>
		<Setter Property="MinimumHeightRequest" Value="10"/>
		<Setter Property="CornerRadius" Value="2"/>
		<Setter Property="Padding" Value="5"/>
	</Style>
	<Style TargetType="dpcontrols:MinusButton" ApplyToDerivedTypes="True" BasedOn="{StaticResource StepperButtonBaseStyle}" x:Key="MinusButtonBaseStyle">
		<Setter Property="Source" Value="minus_white.png"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Source" Value="{AppThemeBinding Light=minus_gray600.png, Dark=minus_gray400.png}"/>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Pressed">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue200Accent}, Dark={DynamicResource Blue200Accent}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="PointerOver">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue100Accent}, Dark={DynamicResource Blue100Accent}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	<Style TargetType="dpcontrols:MinusButton" ApplyToDerivedTypes="True" BasedOn="{StaticResource MinusButtonBaseStyle}"/>

	<Style TargetType="dpcontrols:PlusButton" ApplyToDerivedTypes="True" BasedOn="{StaticResource StepperButtonBaseStyle}" x:Key="PlusButtonBaseStyle">
		<Setter Property="Source" Value="plus_white.png"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Source" Value="{AppThemeBinding Light=plus_gray600.png, Dark=plus_gray400.png}"/>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Gray200}, Dark={DynamicResource Gray600}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Pressed">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue200Accent}, Dark={DynamicResource Blue200Accent}}"/>
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="PointerOver">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource Blue100Accent}, Dark={DynamicResource Blue100Accent}}"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	<Style TargetType="dpcontrols:PlusButton" ApplyToDerivedTypes="True" BasedOn="{StaticResource PlusButtonBaseStyle}"/>

	<Style TargetType="dpcontrols:StepperLabel" ApplyToDerivedTypes="True" BasedOn="{StaticResource LabelBaseStyle}" x:Key="StepperLabelBaseStyle">
		<Setter Property="WidthRequest" Value="30"/>
	</Style>
	<Style TargetType="dpcontrols:StepperLabel" ApplyToDerivedTypes="True" BasedOn="{StaticResource StepperLabelBaseStyle}"/>

	<!-- Miscellaneous -->
	<Style TargetType="TabBar">
		<Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={DynamicResource LightGray}, Dark={DynamicResource BackgroundMid}}"/>
		<Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={DynamicResource DarkGray}, Dark={DynamicResource White}}"/>
		<Setter Property="Shell.TabBarUnselectedColor" Value="{DynamicResource TabOff}"/>
		<Setter Property="Shell.TabBarForegroundColor" Value="{DynamicResource Yellow100Accent}"/>
	</Style>

	<Style x:Key="HorizontalBoarder" TargetType="BoxView">
		<Setter Property="BackgroundColor" Value="White"/>
		<Setter Property="HeightRequest" Value="1"/>
		<Setter Property="HorizontalOptions" Value="Fill"/>
		<Setter Property="Margin" Value="0,5"/>
	</Style>

	<!-- DataGrid Page Layout -->
	<Style TargetType="Grid" Class="PageGridStyle">
		<Setter Property="RowSpacing" Value="10"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="RowDefinitions" Value="Auto,*"/>
	</Style>

	<Style TargetType="Grid" Class="DataGridEditStyle">
		<Setter Property="RowDefinitions" Value="Auto,*"/>
		<Setter Property="RowSpacing" Value="20"/>
		<Setter Property="Padding" Value="20,0"/>
		<Setter Property="VerticalOptions" Value="Start"/>
	</Style>

	<!-- DataGrid Base Styles -->
	<Style TargetType="ContentView" Class="DataGridContentViewStyle" >
		<Setter Property="HorizontalOptions" Value="Fill"/>
		<Setter Property="VerticalOptions" Value="Fill"/>
		<Setter Property="Padding" Value="6,0"/>
	</Style>
	<Style TargetType="Label" Class="DataGridLabelStyle">
		<Setter Property="HorizontalOptions" Value="Start"/>
		<Setter Property="VerticalOptions" Value="Center"/>
	</Style>

	<Style TargetType="Label" x:Key="DataGridTitleStyle">
		<Setter Property="FontAttributes" Value="Bold"/>
		<Setter Property="TextColor" Value="Black"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="HorizontalOptions" Value="Center"/>
		<Setter Property="VerticalOptions" Value="Center"/>
		<Setter Property="LineBreakMode" Value="TailTruncation"/>
	</Style>

	<DataTemplate x:Key="DataGridDefaultStringCellTempate" x:DataType="x:String">
		<ContentView StyleClass="DataGridContentViewStyle">
			<Label Text="{Binding}" StyleClass="DataGridLabelStyle"/>
		</ContentView>
	</DataTemplate>

	<DataTemplate x:Key="DataGridDefaultIntCellTempate" x:DataType="x:Int32">
		<ContentView StyleClass="DataGridContentViewStyle">
			<Label Text="{Binding}" StyleClass="DataGridLabelStyle" HorizontalOptions="End"/>
		</ContentView>
	</DataTemplate>

	<DataTemplate x:Key="DataGridDefaultBooleanCellTempate" x:DataType="x:Boolean">
		<ContentView StyleClass="DataGridContentViewStyle">
			<Label Text="{Binding}" StyleClass="DataGridLabelStyle"/>
		</ContentView>
	</DataTemplate>

	<dg:PaletteCollection x:Key="DataGridColorLightPalette">
		<Color>#F2F2F2</Color>
		<Color>White</Color>
	</dg:PaletteCollection>

	<dg:PaletteCollection x:Key="DataGridColoDarkrPalette">
		<Color>#404040</Color>
		<Color>#292929</Color>
	</dg:PaletteCollection>

	<!-- DataGrid Top Level Styles -->
	<Thickness x:Key="DataGridBorderThickness">0</Thickness>

	<Style TargetType="dg:DataGrid" x:Key="DataGridDefaultBaseStyle">
		<Setter Property="BorderColor" Value="{AppThemeBinding Light={DynamicResource DataGridBorderColorLight}, Dark={DynamicResource DataGridBorderColorDark}}"/>
		<Setter Property="BorderThickness" Value="{StaticResource DataGridBorderThickness}"/>
		<Setter Property="HeaderBackground" Value="{DynamicResource DataGridHeaderBackgroundColor}"/>
		<Setter Property="HeaderBordersVisible" Value="True"/>
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource DataGridBackgroundColorLight}, Dark={DynamicResource DataGridBackgroundColorDark}}"/>
		<Setter Property="FooterBackground" Value="{DynamicResource DataGridFooterBackgroundColor}"/>
		<Setter Property="ActiveRowColor" Value="{DynamicResource DataGridActiveRowColor}"/>
		<Setter Property="RowsBackgroundColorPalette" Value="{AppThemeBinding Light={DynamicResource DataGridColorLightPalette}, Dark={DynamicResource DataGridColoDarkrPalette}}"/>
		<Setter Property="HeaderLabelStyle" Value="{DynamicResource DataGridTitleStyle}"/>
	</Style>

	<Style TargetType="dg:DataGrid" BasedOn="{StaticResource DataGridDefaultBaseStyle}" x:Key="DataGridDefaultLooseStyle">
		<Setter Property="HeaderHeight" Value="40"/>
		<Setter Property="RowHeight" Value="36"/>
	</Style>

	<Style TargetType="dg:DataGrid" BasedOn="{StaticResource DataGridDefaultBaseStyle}" x:Key="DataGridDefaultCompactStyle">
		<Setter Property="HeaderHeight" Value="34"/>
		<Setter Property="RowHeight" Value="30"/>
	</Style>

</ResourceDictionary>